{"version":3,"sources":["constants.ts","utils/getPassedTime.ts","machines/boardMakerMachine.ts","utils/putFood.ts","utils/shuffleArray.ts","utils/splitRows.ts","sounds/getSound.ts","sounds/matched.mp3","sounds/won.mp3","sounds/lost.mp3","machines/gameMachine.ts","utils/addSessionStats.ts","hooks/useGameActor.ts","icons/getIcon.ts","icons/apple.svg","icons/candy.svg","icons/cheese.svg","icons/cupcake.svg","icons/doughnut.svg","icons/egg.svg","icons/fries.svg","icons/gingerbread.svg","icons/hamburger.svg","icons/honey.svg","icons/hotdog.svg","icons/icecream.svg","icons/milk.svg","icons/orange.svg","icons/peach.svg","icons/pizza.svg","icons/pudding.svg","icons/watermelon.svg","views/Board/Row.tsx","views/Board/Board.tsx","views/Profile/PlayerName.tsx","views/Profile/Profile.tsx","views/Panel/CountupTimer.tsx","views/Panel/OutcomeDisplay.tsx","views/Panel/StatsTable.tsx","views/Panel/StatsPopover.tsx","views/Panel/Panel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EXTRA_SMALL_SCREEN","SMALL_SCREEN","TABLET_SCREEN","padStart","value","String","getPassedTime","totalSeconds","minutes","Math","floor","seconds","boardMakerMachine","Machine","id","initial","context","size","FOOD","board","undefined","deck","error","states","always","cond","target","actions","populatingDeck","shufflingDeck","creatingBoard","done","type","data","ctx","setSizeError","assign","populateDeck","food","populatedFOOD","currentFoodId","foodAddedCount","i","push","label","isPicked","putFood","shuffleDeck","arr","sort","random","createBoard","rowsHeight","ceil","length","Array","fill","map","_","index","slice","splitRows","sqrt","guards","hasCorrectSize","rowWidth","Number","isInteger","soundsRef","matched","won","lost","getSound","soundName","Audio","DEFAULT_GAME_CONTEXT","playerName","sessionId","pickedCard","startedAt","points","stats","gameMachine","audio","enabled","on","TOGGLE_AUDIO","disabled","playground","profile","CHANGE_PLAYER_NAME","START_GAME","invoke","src","onDone","creatingSession","gameSession","memorizing","SEE_PROFILE","playing","idle","SELECT_CARD","selectingPair","after","entry","setPlayerName","event","payload","setBoardMakingError","createSessionId","uuidv4","setStartedAt","Date","now","setPickedCard","markPickedCard","row","card","increasePoints","updateStats","player","name","time","sessionStats","a","b","addSessionStats","resetSession","playMatchedSound","__","state","matches","sound","play","playWinnerSound","playLoserSound","hasPlayerName","hasBoard","Boolean","isPickedCard","flat","find","hasWon","BOARD_SIZE","hasMatchedCard","GameActorContext","React","createContext","useGameActor","actorRef","useContext","useActor","iconsRef","apple","candy","cheese","cupcake","doughnut","egg","fries","gingerbread","hamburger","honey","hotdog","icecream","milk","orange","peach","pizza","pudding","watermelon","getIcon","className","createElement","alt","useStyles","makeStyles","theme","createStyles","root","display","width","flexGrow","background","margin","spacing","padding","cursor","transition","border","borderRadius","opacity","inactiveCard","icon","height","breakpoints","down","Row","rId","send","classes","isMemorizing","isCardInactive","cId","clsx","onClick","Tooltip","title","minHeight","minWidth","flexDirection","Board","Grow","in","Paper","elevation","marginBottom","PlayerName","noValidate","autoComplete","TextField","variant","onChange","required","justifyContent","fontSize","Profile","timeout","Typography","gutterBottom","Button","color","CountupTimer","useState","setTotalSeconds","useEffect","interval","setInterval","sec","clearInterval","memo","gameOutcomeWrapper","alignItems","gameOutcomeTitle","marginLeft","OutcomeDisplay","hasLost","columns","align","format","container","maxHeight","StatsTable","rows","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","style","TableBody","hover","role","tabIndex","selected","alignSelf","typography","paper","SimplePopover","anchorEl","setAnchorEl","open","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","component","info","handlers","startButton","Panel","isPlaying","isGameOver","IconButton","logo","fontFamily","marginTop","logoHighlight","content","createMuiTheme","values","xs","sm","md","lg","xl","App","useMachine","devTools","service","Provider","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27304745.chunk.js","sourcesContent":["export const BOARD_SIZE = 36;\n\nexport const FOOD_PRESENCE_COUNT = 2;\n\nexport const MATCH_PAIR_TIMEOUT_MS = 5000;\n\nexport const FOOD = [\n  \"apple\",\n  \"candy\",\n  \"cheese\",\n  \"cupcake\",\n  \"doughnut\",\n  \"egg\",\n  \"fries\",\n  \"gingerbread\",\n  \"hamburger\",\n  \"honey\",\n  \"hotdog\",\n  \"icecream\",\n  \"milk\",\n  \"orange\",\n  \"peach\",\n  \"pizza\",\n  \"pudding\",\n  \"watermelon\",\n];\n\nexport const SMALL_SCREEN_ICON_SIZE = 32;\n\nexport const EXTRA_SMALL_SCREEN = {\n  ICON_SIZE: 32,\n  BOARD_PADDING_SPACING: 1,\n};\n\nexport const SMALL_SCREEN = {\n  ICON_SIZE: 36,\n  BOARD_PADDING_SPACING: 1.5,\n};\n\nexport const TABLET_SCREEN = {\n  ICON_SIZE: 48,\n  BOARD_PADDING_SPACING: 2,\n};\n","function padStart(value: number) {\n  return String(value).padStart(2, \"0\");\n}\n\nexport default function getPassedTime(totalSeconds: number) {\n  const minutes = padStart(Math.floor(totalSeconds / 60));\n  const seconds = padStart(Math.floor(totalSeconds % 60));\n\n  return { minutes, seconds };\n}\n","import { Machine, assign } from \"xstate\";\nimport { FoodCard, FoodBoard } from \"../models\";\nimport { shuffleArray, splitRows, putFood } from \"../utils\";\nimport { BOARD_SIZE, FOOD } from \"../constants\";\n\ninterface CardsMakerMachineSchema {\n  states: {\n    initial: {};\n    populatingDeck: {};\n    shufflingDeck: {};\n    creatingBoard: {};\n    done: {};\n  };\n}\n\ntype Deck = FoodCard[];\n\nexport interface CardsMakerMachineContext {\n  size: number;\n  FOOD: string[];\n  deck: Deck;\n  board?: FoodBoard;\n  error: string;\n}\n\nexport const boardMakerMachine = Machine<\n  CardsMakerMachineContext,\n  CardsMakerMachineSchema\n>(\n  {\n    id: \"boardMaker\",\n    initial: \"initial\",\n    context: {\n      size: BOARD_SIZE,\n      FOOD: FOOD,\n      board: undefined,\n      deck: [],\n      error: \"\",\n    },\n    states: {\n      initial: {\n        always: [\n          { cond: \"hasCorrectSize\", target: \"populatingDeck\" },\n          { target: \"done\", actions: \"setSizeError\" },\n        ],\n      },\n      populatingDeck: {\n        always: {\n          actions: \"populateDeck\",\n          target: \"shufflingDeck\",\n        },\n      },\n      shufflingDeck: {\n        always: {\n          actions: \"shuffleDeck\",\n          target: \"creatingBoard\",\n        },\n      },\n      creatingBoard: {\n        always: {\n          actions: \"createBoard\",\n          target: \"done\",\n        },\n      },\n      done: {\n        type: \"final\",\n        data: (ctx) => ({ error: ctx.error, board: ctx.board }),\n      },\n    },\n  },\n  {\n    actions: {\n      setSizeError: assign({\n        error: (ctx) => `'${ctx.size}' is not correct board size value.`,\n      }),\n      populateDeck: assign({\n        deck: (ctx) => putFood(ctx.FOOD, ctx.size),\n      }),\n      shuffleDeck: assign({\n        deck: (ctx) => shuffleArray(ctx.deck) as Deck,\n      }),\n      createBoard: assign({\n        board: (ctx) => splitRows(ctx.deck, Math.sqrt(ctx.size)) as FoodBoard,\n      }),\n    },\n    guards: {\n      hasCorrectSize: (ctx) => {\n        const rowWidth = Math.sqrt(ctx.size);\n\n        return Number.isInteger(rowWidth);\n      },\n    },\n  }\n);\n","import { FOOD_PRESENCE_COUNT } from \"../constants\";\n\nexport default function putFood(food: string[], size: number) {\n  const populatedFOOD = [];\n\n  let currentFoodId = 0;\n  let foodAddedCount = 0;\n\n  for (let i = 0; i < size; i++) {\n    if (foodAddedCount === FOOD_PRESENCE_COUNT) {\n      currentFoodId += 1;\n      foodAddedCount = 0;\n    }\n\n    populatedFOOD.push({\n      id: i,\n      label: food[currentFoodId],\n      isPicked: false,\n    });\n\n    foodAddedCount += 1;\n  }\n\n  return populatedFOOD;\n}\n","export default function shuffleArray(arr: unknown[]) {\n  return [...arr].sort(() => Math.random() - 0.5);\n}\n","export default function splitRows(arr: unknown[], size: number) {\n  const rowsHeight = Math.ceil(arr.length / size);\n\n  const rows = Array(rowsHeight)\n    .fill(\"\")\n    .map((_, index) => arr.slice(size * index, size * index + size));\n\n  return rows;\n}\n","import matched from \"./matched.mp3\";\nimport won from \"./won.mp3\";\nimport lost from \"./lost.mp3\";\n\nconst soundsRef = {\n  matched,\n  won,\n  lost,\n};\n\nexport default function getSound(soundName: \"matched\" | \"won\" | \"lost\") {\n  return new Audio(soundsRef[soundName]);\n}\n","export default __webpack_public_path__ + \"static/media/matched.ece5333d.mp3\";","export default __webpack_public_path__ + \"static/media/won.b143fa0e.mp3\";","export default __webpack_public_path__ + \"static/media/lost.df0fda29.mp3\";","import { Machine, assign } from \"xstate\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { boardMakerMachine } from \"./boardMakerMachine\";\nimport { FoodBoard, SessionStats } from \"../models\";\nimport {\n  BOARD_SIZE,\n  FOOD_PRESENCE_COUNT,\n  MATCH_PAIR_TIMEOUT_MS,\n} from \"../constants\";\nimport { addSessionStats } from \"../utils\";\nimport getSound from \"../sounds/getSound\";\n\ninterface GameMachineSchema {\n  states: {\n    audio: {\n      states: {\n        enabled: {};\n        disabled: {};\n      };\n    };\n    playground: {\n      states: {\n        profile: {};\n        creatingBoard: {};\n        creatingSession: {};\n        gameSession: {\n          states: {\n            memorizing: {};\n            playing: {\n              states: {\n                idle: {};\n                selectingPair: {};\n              };\n            };\n            won: {};\n            lost: {};\n          };\n        };\n      };\n    };\n  };\n}\n\nexport interface GameMachineContext {\n  playerName: string;\n  sessionId?: string;\n  pickedCard?: {\n    id: number;\n    label: string;\n  };\n  startedAt?: number;\n  points: number;\n  board: FoodBoard;\n  stats: SessionStats[];\n  error: string;\n}\n\ntype ToggleAudioEvent = {\n  type: \"TOGGLE_AUDIO\";\n};\n\ntype SetupProfileEvent = {\n  type: \"SETUP_PROFILE\";\n};\n\ntype ChangePlayerNameEvent = {\n  type: \"CHANGE_PLAYER_NAME\";\n  payload: {\n    value: string;\n  };\n};\n\ntype StartSessionEvent = {\n  type: \"START_SESSION\";\n};\n\ntype StartGameEvent = {\n  type: \"START_GAME\";\n};\n\ntype SeeProfileEvent = {\n  type: \"SEE_PROFILE\";\n};\n\ntype SelectCardEvent = {\n  type: \"SELECT_CARD\";\n  payload: {\n    value: string;\n  };\n};\n\nexport type GameMachineEvents =\n  | ToggleAudioEvent\n  | SetupProfileEvent\n  | ChangePlayerNameEvent\n  | StartSessionEvent\n  | StartGameEvent\n  | SeeProfileEvent\n  | SelectCardEvent;\n\nconst DEFAULT_GAME_CONTEXT = {\n  playerName: \"Default\",\n  sessionId: undefined,\n  pickedCard: undefined,\n  startedAt: undefined,\n  points: 0,\n  board: [],\n  stats: [],\n  error: \"\",\n};\n\nexport const gameMachine = Machine<\n  GameMachineContext,\n  GameMachineSchema,\n  GameMachineEvents\n>(\n  {\n    id: \"game\",\n    type: \"parallel\",\n    context: DEFAULT_GAME_CONTEXT,\n    states: {\n      audio: {\n        initial: \"enabled\",\n        states: {\n          enabled: {\n            on: {\n              TOGGLE_AUDIO: \"disabled\",\n            },\n          },\n          disabled: {\n            on: {\n              TOGGLE_AUDIO: \"enabled\",\n            },\n          },\n        },\n      },\n      playground: {\n        id: \"playground\",\n        initial: \"profile\",\n        states: {\n          profile: {\n            on: {\n              CHANGE_PLAYER_NAME: {\n                actions: [\"setPlayerName\"],\n              },\n              START_GAME: [{ cond: \"hasPlayerName\", target: \"creatingBoard\" }],\n            },\n          },\n          creatingBoard: {\n            invoke: {\n              src: boardMakerMachine,\n              onDone: [\n                {\n                  cond: \"hasBoard\",\n                  actions: \"createBoard\",\n                  target: \"creatingSession\",\n                },\n                {\n                  actions: \"setBoardMakingError\",\n                  target: \"profile\",\n                },\n              ],\n            },\n          },\n          creatingSession: {\n            always: {\n              actions: \"createSessionId\",\n              target: \"gameSession\",\n            },\n          },\n          gameSession: {\n            id: \"gameSession\",\n            initial: \"memorizing\",\n            states: {\n              memorizing: {\n                on: {\n                  START_GAME: { actions: \"setStartedAt\", target: \"playing\" },\n                  SEE_PROFILE: \"#playground.profile\",\n                },\n              },\n              playing: {\n                initial: \"idle\",\n                states: {\n                  idle: {\n                    always: {\n                      cond: \"hasWon\",\n                      target: \"#gameSession.won\",\n                    },\n                    on: {\n                      SELECT_CARD: [\n                        {\n                          cond: \"isPickedCard\",\n                          target: \"idle\",\n                        },\n                        {\n                          actions: [\"setPickedCard\", \"markPickedCard\"],\n                          target: \"selectingPair\",\n                        },\n                      ],\n                    },\n                  },\n                  selectingPair: {\n                    after: {\n                      [MATCH_PAIR_TIMEOUT_MS]: \"#gameSession.lost\",\n                    },\n                    on: {\n                      SELECT_CARD: [\n                        {\n                          cond: \"isPickedCard\",\n                          target: \"selectingPair\",\n                        },\n                        {\n                          cond: \"hasMatchedCard\",\n                          actions: [\n                            \"markPickedCard\",\n                            \"playMatchedSound\",\n                            \"increasePoints\",\n                          ],\n                          target: \"idle\",\n                        },\n                        {\n                          actions: \"markPickedCard\",\n                          target: \"#gameSession.lost\",\n                        },\n                      ],\n                    },\n                  },\n                },\n              },\n              won: {\n                entry: [\"playWinnerSound\", \"updateStats\"],\n                on: {\n                  SEE_PROFILE: {\n                    target: \"#playground.profile\",\n                    actions: \"resetSession\",\n                  },\n                },\n              },\n              lost: {\n                entry: [\"playLoserSound\", \"updateStats\"],\n                on: {\n                  SEE_PROFILE: {\n                    target: \"#playground.profile\",\n                    actions: \"resetSession\",\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  {\n    actions: {\n      setPlayerName: assign({\n        playerName: (_, event: any) => event.payload.value,\n      }),\n      setBoardMakingError: assign({\n        error: (_, event: any) => `Error: ${event.data.error}`,\n      }),\n      createBoard: assign({\n        board: (_, event: any) => event.data.board,\n      }),\n      createSessionId: assign({\n        sessionId: (_) => uuidv4(),\n      }),\n      setStartedAt: assign({ startedAt: (_) => Date.now() }),\n      setPickedCard: assign({\n        pickedCard: (_, { payload }: any) => ({\n          id: payload.id,\n          label: payload.label,\n        }),\n      }),\n      markPickedCard: assign({\n        board: (ctx, event: any) =>\n          ctx.board.map((row) =>\n            row.map((card) =>\n              card.id === event.payload.id ? { ...card, isPicked: true } : card\n            )\n          ),\n      }),\n      increasePoints: assign({\n        points: (ctx) => ctx.points + 1,\n      }),\n      updateStats: assign({\n        stats: (ctx) => {\n          const player = {\n            name: ctx.playerName,\n            time: Date.now() - (ctx.startedAt as number),\n            sessionId: ctx.sessionId as string,\n            points: ctx.points,\n          };\n\n          return addSessionStats(ctx.stats, player);\n        },\n      }),\n      resetSession: assign((ctx) => ({\n        ...DEFAULT_GAME_CONTEXT,\n        playerName: ctx.playerName,\n        stats: ctx.stats,\n      })),\n      playMatchedSound: (_, __, { state }) => {\n        if (state.matches(\"audio.enabled\")) {\n          const sound = getSound(\"matched\");\n          sound?.play();\n        }\n      },\n      playWinnerSound: (_, __, { state }) => {\n        if (state.matches(\"audio.enabled\")) {\n          const sound = getSound(\"won\");\n          sound?.play();\n        }\n      },\n      playLoserSound: (_, __, { state }) => {\n        if (state.matches(\"audio.enabled\")) {\n          const sound = getSound(\"lost\");\n          sound?.play();\n        }\n      },\n    },\n    guards: {\n      hasPlayerName: (ctx) => ctx.playerName.length > 0,\n      hasBoard: (_, event: any) => Boolean(event.data.board),\n      isPickedCard: (ctx, event: any) => {\n        const flatBoard = ctx.board.flat();\n        const card = flatBoard.find((card) => card.id === event.payload.id);\n\n        return Boolean(card?.isPicked);\n      },\n      hasWon: (ctx) => ctx.points === BOARD_SIZE / FOOD_PRESENCE_COUNT,\n      hasMatchedCard: (ctx, event: any) =>\n        ctx.pickedCard?.label === event.payload.label,\n    },\n  }\n);\n","import { SessionStats } from \"../models\";\n\nexport default function addSessionStats(\n  stats: SessionStats[],\n  sessionStats: SessionStats\n) {\n  return [...stats, sessionStats].sort((a, b) =>\n    a.points === b.points ? a.time - b.time : b.points - a.points\n  );\n}\n","import React from \"react\";\nimport { Interpreter, ActorRef, State, Sender } from \"xstate\";\nimport { useActor } from \"@xstate/react\";\nimport { GameMachineContext, GameMachineEvents } from \"../machines/gameMachine\";\n\ntype ActorContextType =\n  | Interpreter<GameMachineContext, any, GameMachineEvents>\n  | unknown;\n\nexport const GameActorContext = React.createContext<ActorContextType>(\n  undefined\n);\n\nexport function useGameActor(): [\n  State<GameMachineContext, GameMachineEvents>,\n  Sender<GameMachineEvents>\n] {\n  const actorRef = React.useContext(\n    GameActorContext\n  ) as ActorRef<GameMachineEvents>;\n\n  // @ts-ignore\n  return useActor(actorRef);\n}\n","import React from \"react\";\nimport apple from \"./apple.svg\";\nimport candy from \"./candy.svg\";\nimport cheese from \"./cheese.svg\";\nimport cupcake from \"./cupcake.svg\";\nimport doughnut from \"./doughnut.svg\";\nimport egg from \"./egg.svg\";\nimport fries from \"./fries.svg\";\nimport gingerbread from \"./gingerbread.svg\";\nimport hamburger from \"./hamburger.svg\";\nimport honey from \"./honey.svg\";\nimport hotdog from \"./hotdog.svg\";\nimport icecream from \"./icecream.svg\";\nimport milk from \"./milk.svg\";\nimport orange from \"./orange.svg\";\nimport peach from \"./peach.svg\";\nimport pizza from \"./pizza.svg\";\nimport pudding from \"./pudding.svg\";\nimport watermelon from \"./watermelon.svg\";\n\nconst iconsRef: { [key: string]: string } = {\n  apple,\n  candy,\n  cheese,\n  cupcake,\n  doughnut,\n  egg,\n  fries,\n  gingerbread,\n  hamburger,\n  honey,\n  hotdog,\n  icecream,\n  milk,\n  orange,\n  peach,\n  pizza,\n  pudding,\n  watermelon,\n};\n\nexport default function getIcon({\n  label,\n  className,\n}: {\n  label: string;\n  className: string;\n}) {\n  return React.createElement(\"img\", {\n    src: iconsRef[label],\n    alt: label,\n    className,\n  });\n}\n","export default __webpack_public_path__ + \"static/media/apple.9c3e3a73.svg\";","export default __webpack_public_path__ + \"static/media/candy.50429e13.svg\";","export default __webpack_public_path__ + \"static/media/cheese.986768a9.svg\";","export default __webpack_public_path__ + \"static/media/cupcake.a6951c2a.svg\";","export default __webpack_public_path__ + \"static/media/doughnut.5561d4a9.svg\";","export default __webpack_public_path__ + \"static/media/egg.2c7b4cdd.svg\";","export default __webpack_public_path__ + \"static/media/fries.471be26b.svg\";","export default __webpack_public_path__ + \"static/media/gingerbread.7bb96fa1.svg\";","export default __webpack_public_path__ + \"static/media/hamburger.c2eabc23.svg\";","export default __webpack_public_path__ + \"static/media/honey.53b94fc3.svg\";","export default __webpack_public_path__ + \"static/media/hotdog.504168a2.svg\";","export default __webpack_public_path__ + \"static/media/icecream.24cc8c4d.svg\";","export default __webpack_public_path__ + \"static/media/milk.3c4cbc0f.svg\";","export default __webpack_public_path__ + \"static/media/orange.614a5bdb.svg\";","export default __webpack_public_path__ + \"static/media/peach.c0a49a08.svg\";","export default __webpack_public_path__ + \"static/media/pizza.9754f292.svg\";","export default __webpack_public_path__ + \"static/media/pudding.85208db3.svg\";","export default __webpack_public_path__ + \"static/media/watermelon.8902e7dc.svg\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { useGameActor } from \"../../hooks\";\nimport { FoodCard } from \"../../models\";\nimport getIcon from \"../../icons/getIcon\";\nimport {\n  EXTRA_SMALL_SCREEN,\n  SMALL_SCREEN,\n  TABLET_SCREEN,\n} from \"../../constants\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      width: \"100%\",\n      flexGrow: 1,\n    },\n    card: {\n      background: \"#90a1ff\",\n      display: \"flex\",\n      flexGrow: 1,\n      margin: theme.spacing(0.25),\n      padding: theme.spacing(1),\n      cursor: \"pointer\",\n      transition: \"opacity ease-in-out 0.4s\",\n      border: \"1px solid #5a73ff\",\n      borderRadius: 5,\n      \"&:hover\": {\n        opacity: 0.85,\n      },\n    },\n    inactiveCard: {\n      cursor: \"auto\",\n      \"&:hover\": {\n        opacity: 1,\n      },\n    },\n    icon: {\n      height: TABLET_SCREEN.ICON_SIZE,\n      width: TABLET_SCREEN.ICON_SIZE,\n      [theme.breakpoints.down(\"md\")]: {\n        height: SMALL_SCREEN.ICON_SIZE,\n        width: SMALL_SCREEN.ICON_SIZE,\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        height: EXTRA_SMALL_SCREEN.ICON_SIZE,\n        width: EXTRA_SMALL_SCREEN.ICON_SIZE,\n      },\n    },\n  })\n);\n\ninterface RowProps {\n  row: FoodCard[];\n  rId: number;\n}\n\nfunction Row({ row, rId }: RowProps) {\n  const [state, send] = useGameActor();\n\n  const classes = useStyles();\n\n  const handleClick = (payload: any) => {\n    send({ type: \"SELECT_CARD\", payload });\n  };\n\n  const isMemorizing = state.matches(\"playground.gameSession.memorizing\");\n\n  const isCardInactive =\n    isMemorizing ||\n    state.matches(\"playground.gameSession.won\") ||\n    state.matches(\"playground.gameSession.lost\");\n\n  return (\n    <div className={classes.root}>\n      {row.map(({ label, isPicked, id }, cId: number) => (\n        <div\n          key={`${rId}-${cId}`}\n          className={clsx(classes.card, {\n            [classes.inactiveCard]: isPicked || isCardInactive,\n          })}\n          onClick={() => handleClick({ label, id })}\n        >\n          {isMemorizing || isPicked ? (\n            <Tooltip title={label}>\n              {getIcon({ label, className: classes.icon })}\n            </Tooltip>\n          ) : (\n            <span className={classes.icon}></span>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Row;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useGameActor } from \"../../hooks\";\nimport Row from \"./Row\";\nimport {\n  EXTRA_SMALL_SCREEN,\n  SMALL_SCREEN,\n  TABLET_SCREEN,\n} from \"../../constants\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: 324,\n      minWidth: 324,\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: theme.spacing(TABLET_SCREEN.BOARD_PADDING_SPACING),\n      [theme.breakpoints.down(\"md\")]: {\n        padding: theme.spacing(SMALL_SCREEN.BOARD_PADDING_SPACING),\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        padding: theme.spacing(EXTRA_SMALL_SCREEN.BOARD_PADDING_SPACING),\n      },\n    },\n  })\n);\n\nfunction Board() {\n  const [state] = useGameActor();\n\n  const classes = useStyles();\n\n  const board = state?.context.board ?? [];\n\n  return (\n    <>\n      {state?.matches(\"playground.gameSession\") && (\n        <div>\n          <Grow in={board.length > 0}>\n            <Paper className={classes.root} elevation={2}>\n              {board.map((row, rId: number) => {\n                return <Row key={`r-${rId + 1}`} row={row} rId={rId} />;\n              })}\n            </Paper>\n          </Grow>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Board;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useGameActor } from \"../../hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginBottom: theme.spacing(1.5),\n    },\n  })\n);\n\nfunction PlayerName() {\n  const [state, send] = useGameActor();\n\n  const classes = useStyles();\n\n  return (\n    <form noValidate autoComplete=\"off\" className={classes.root}>\n      <TextField\n        variant=\"filled\"\n        value={state?.context.playerName}\n        onChange={(\n          event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n        ) =>\n          send({\n            type: \"CHANGE_PLAYER_NAME\",\n            payload: { value: event.target.value },\n          })\n        }\n        label=\"Your name\"\n        required\n        error={state?.context.playerName.length === 0}\n      />\n    </form>\n  );\n}\n\nexport default PlayerName;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { useGameActor } from \"../../hooks\";\nimport PlayerName from \"./PlayerName\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: theme.spacing(2),\n    },\n    title: {\n      fontSize: 20,\n    },\n  })\n);\n\nfunction Profile() {\n  const [state, send] = useGameActor();\n  const classes = useStyles();\n\n  return (\n    <>\n      {state?.matches(\"playground.profile\") && (\n        <Grow in={true} timeout={500}>\n          <Paper className={classes.root} elevation={2}>\n            <Typography className={classes.title} gutterBottom>\n              Player profile\n            </Typography>\n            <PlayerName />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => send(\"START_GAME\")}\n              disabled={state?.context.playerName.length === 0}\n            >\n              Start Game\n            </Button>\n          </Paper>\n        </Grow>\n      )}\n    </>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { getPassedTime } from \"../../utils\";\n\nfunction CountupTimer() {\n  const [totalSeconds, setTotalSeconds] = React.useState(0);\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setTotalSeconds((sec) => sec + 1);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const { minutes, seconds } = getPassedTime(totalSeconds);\n\n  return (\n    <>\n      {minutes}:{seconds}\n    </>\n  );\n}\n\nexport default React.memo(CountupTimer);\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grow from \"@material-ui/core/Grow\";\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { useGameActor } from \"../../hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    gameOutcomeWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    gameOutcomeTitle: {\n      marginLeft: theme.spacing(0.5),\n    },\n  })\n);\n\nfunction OutcomeDisplay() {\n  const [state] = useGameActor();\n  const classes = useStyles();\n\n  const hasWon = state.matches(\"playground.gameSession.won\");\n  const hasLost = state.matches(\"playground.gameSession.lost\");\n\n  return (\n    <>\n      {(hasWon || hasLost) && (\n        <Grow in={true} timeout={500}>\n          <div className={classes.gameOutcomeWrapper}>\n            {hasWon ? (\n              <SentimentSatisfiedOutlinedIcon />\n            ) : (\n              <SentimentVeryDissatisfiedIcon />\n            )}{\" \"}\n            <div className={classes.gameOutcomeTitle}>\n              You {hasWon ? \"won\" : \"lost\"}\n            </div>\n          </div>\n        </Grow>\n      )}\n    </>\n  );\n}\n\nexport default OutcomeDisplay;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useGameActor } from \"../../hooks\";\nimport { getPassedTime } from \"../../utils\";\n\ninterface Column {\n  id: \"name\" | \"points\" | \"time\";\n  label: string;\n  minWidth?: number;\n  align?: \"right\";\n  format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n  { id: \"name\", label: \"Name\", minWidth: 170 },\n  {\n    id: \"points\",\n    label: \"Points\",\n    minWidth: 100,\n    align: \"right\",\n  },\n  {\n    id: \"time\",\n    label: \"Time\",\n    minWidth: 70,\n    align: \"right\",\n    format: (value: number) => {\n      const { minutes, seconds } = getPassedTime(value / 1000);\n\n      return `${minutes}:${seconds}`;\n    },\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nfunction StatsTable() {\n  const [state] = useGameActor();\n\n  const classes = useStyles();\n\n  const rows = state?.context.stats;\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row: any, id: number) => {\n              return (\n                <TableRow\n                  hover\n                  role=\"checkbox\"\n                  tabIndex={-1}\n                  key={id}\n                  selected={\n                    rows.length > 1 &&\n                    row.sessionId === state?.context.sessionId\n                  }\n                >\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === \"number\"\n                          ? column.format(value)\n                          : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n\nexport default StatsTable;\n","import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport BarChartOutlinedIcon from \"@material-ui/icons/BarChartOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport StatsTable from \"./StatsTable\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignSelf: \"center\",\n    },\n    typography: {\n      padding: theme.spacing(2),\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    title: {\n      background: \"#efefef\",\n      borderRadius: 5,\n      display: \"flex\",\n      alignItems: \"center\",\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\nexport default function SimplePopover() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"stats-popover\" : undefined;\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        Stats\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        PaperProps={{\n          className: classes.paper,\n        }}\n      >\n        <div className={classes.title}>\n          <BarChartOutlinedIcon />\n          <Typography component=\"h2\" variant=\"h6\">\n            Stats\n          </Typography>\n        </div>\n        <StatsTable />\n      </Popover>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\nimport { useGameActor } from \"../../hooks\";\nimport CountupTimer from \"./CountupTimer\";\nimport OutcomeDisplay from \"./OutcomeDisplay\";\nimport StatsPopover from \"./StatsPopover\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      height: 48,\n    },\n    info: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginLeft: theme.spacing(1),\n    },\n    handlers: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    startButton: {\n      margin: `0 ${theme.spacing(0.5)}px`,\n    },\n  })\n);\n\nfunction Panel() {\n  const [state, send] = useGameActor();\n\n  const classes = useStyles();\n\n  const isMemorizing = state?.matches(\"playground.gameSession.memorizing\");\n\n  const isPlaying = state?.matches(\"playground.gameSession.playing\");\n\n  const isGameOver =\n    state?.matches(\"playground.gameSession.won\") ||\n    state?.matches(\"playground.gameSession.lost\");\n\n  return (\n    <>\n      {state?.matches(\"playground.gameSession\") && (\n        <div className={classes.root}>\n          <div className={classes.info}>\n            {isMemorizing && <>If you are ready push \"Start\"</>}\n            {isPlaying && <CountupTimer />}\n            <OutcomeDisplay />\n          </div>\n          <div className={classes.handlers}>\n            {isGameOver && (\n              <>\n                <StatsPopover />\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"primary\"\n                  className={classes.startButton}\n                  onClick={() => send(\"SEE_PROFILE\")}\n                >\n                  New game\n                </Button>\n              </>\n            )}\n            {isMemorizing && (\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.startButton}\n                onClick={() => send(\"START_GAME\")}\n              >\n                Start\n              </Button>\n            )}\n            {isPlaying && (\n              <IconButton\n                color=\"secondary\"\n                aria-label=\"add an alarm\"\n                onClick={() => send(\"TOGGLE_AUDIO\")}\n              >\n                {state.matches(\"audio.enabled\") && <VolumeUpIcon />}\n                {state.matches(\"audio.disabled\") && <VolumeOffIcon />}\n              </IconButton>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Panel;\n","import React from \"react\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useMachine } from \"@xstate/react\";\nimport { gameMachine } from \"./machines/gameMachine\";\nimport { Board } from \"./views/Board\";\nimport { GameActorContext } from \"./hooks\";\nimport { Profile } from \"./views/Profile\";\nimport { Panel } from \"./views/Panel\";\nimport { inspect } from \"@xstate/inspect\";\n\nif (process.env.NODE_ENV === \"development\") {\n  inspect({\n    iframe: false,\n  });\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    logo: {\n      color: \"#3f51b5\",\n      fontFamily: \"'Carter One', cursive\",\n      marginTop: theme.spacing(2),\n      marginBottom: 0,\n    },\n    logoHighlight: {\n      color: \"#f50057\",\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: `${theme.spacing(2)}px 0`,\n    },\n  })\n);\n\nconst theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 425,\n      md: 768,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n});\n\nfunction App() {\n  const [, , service] = useMachine(gameMachine, {\n    devTools: true,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <GameActorContext.Provider value={service}>\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <Typography variant=\"h3\" component=\"h1\" className={classes.logo}>\n            Memo<span className={classes.logoHighlight}>F</span>ood\n          </Typography>\n          <div className={classes.content}>\n            <Profile />\n            <Panel />\n            <Board />\n          </div>\n        </div>\n      </ThemeProvider>\n    </GameActorContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}